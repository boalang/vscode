{
    "visitor snippet": {
        "prefix": "visitor",
        "body": "visit(${1:input}, visitor {\n\t${2:before} ${3:n}: ${4:type} -> {\n\t\t$5\n\t}$0\n});"
    },
    "before clause": {
        "prefix": "before",
        "body": "before ${1:n}: ${2:type} -> {\n\t$3\n}"
    },
    "after clause": {
        "prefix": "after",
        "body": "after ${1:n}: ${2:type} -> {\n\t$3\n}"
    },
    "snapshot snippet": {
        "prefix": "snapshot",
        "body": "before node: CodeRepository -> {\n\tsnapshot := getsnapshot(node);\n\tforeach (i: int; def(snapshot[i]))\n\t\tvisit(snapshot[i]);\n\tstop;\n}"
    },
    "traversal snippet": {
        "prefix": "traversal",
        "body": "${1:name} := traversal(${2:node}: ${3:CFGNode}) {\n\t$4\n};"
    },
    "traversal-return snippet": {
        "prefix": "traversal-return",
        "body": "${1:name} := traversal(${2:node}: ${3:CFGNode}) : $4 {\n\t$5\n\treturn $6;\n};"
    },
    "traverse snippet": {
        "prefix": "traverse",
        "body": "traverse(${1:cfg}, TraversalDirection.${2:BACKWARD}, TraversalKind.${3:HYBRID}, $4);"
    },
    "traverse-fp snippet": {
        "prefix": "traverse-fp",
        "body": "traverse(${1:cfg}, TraversalDirection.${2:BACKWARD}, TraversalKind.${3:HYBRID}, $4, ${5:fp});"
    },
    "fixp snippet": {
        "prefix": "fixp",
        "body": "${1:name} := fixp(${2:curr}, ${3:prev}: $4) : bool {\n\treturn $5;\n};"
    },
    "foreach snippet": {
        "prefix": "foreach",
        "body": "foreach (${1:i}: ${2:int}; ${3:condition}) {\n\t$4\n}"
    },
    "exists snippet": {
        "prefix": "exists",
        "body": "exists (${1:i}: ${2:int}; ${3:condition}) {\n\t$4\n}"
    },
    "ifall snippet": {
        "prefix": "ifall",
        "body": "ifall (${1:i}: ${2:int}; ${3:condition}) {\n\t$4\n}"
    },
    "if snippet": {
        "prefix": "if",
        "body": "if (${1:condition}) {\n\t$2\n}"
    },
    "ife snippet": {
        "prefix": "ife",
        "body": "if (${1:condition}) {\n\t$2\n} else {\n\t$3\n}"
    }
}